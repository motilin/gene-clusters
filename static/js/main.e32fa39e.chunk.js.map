{"version":3,"sources":["ControlPanel.js","data/mutationsFiltered.csv","DataProvider.js","Heatmap.js","App.js","reportWebVitals.js","index.js"],"names":["genes","DataContext","createContext","DataProvider","children","useState","allMutations","setAllMutations","getMutations","a","d3","mutationsFile","csv","prepared","forEach","elem","sample_id","symbol","push","gene","useEffect","Provider","value","className","ControlPanel","setMatrix","useContext","Set","Object","values","group","keys","add","type","Heatmap","App","matrix","setMutations","mutations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAGeA,E,wFCHA,MAA0B,8C,eCKnCC,EAAcC,0BAGL,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,EAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,IAAOC,GADN,OACbC,EADa,OAEfC,EAAW,GACfD,EAAIE,SAAQ,SAACC,GACX,GAAMA,EAAKC,aAAaH,EAIXE,EAAKE,UAAUJ,EAASE,EAAKC,WAGxCH,EAASE,EAAKC,WAAWD,EAAKE,QAAQC,KAAKH,GAF3CF,EAASE,EAAKC,WAAWD,EAAKE,QAAU,CAACF,OALR,CACjC,IAAMI,EAAO,GACbA,EAAKJ,EAAKE,QAAU,CAACF,GACrBF,EAASE,EAAKC,WAAaG,MAO/BZ,EAAgBM,GAdG,2CAAH,qDAqBlB,OAJAO,qBAAU,WACRZ,MACC,IAEEF,EAGH,cAACL,EAAYoB,SAAb,CAAsBC,MAAO,CAAEhB,gBAA/B,SACGF,IAJqB,oBAAImB,UAAU,UAAd,8BF5Bb,SAASC,EAAT,GAAqC,EAAbC,UAAc,IAC3CnB,EECmBoB,qBAAWzB,GFD9BK,aAoBR,OAPAc,qBAAU,WACHd,IACI,eAAQA,GAZjBN,EAAQ,IAAI2B,IACZC,OAAOC,OAAOvB,GAAcQ,SAAQ,SAACgB,GAAD,OAClCF,OAAOG,KAAKD,GAAOhB,SAAQ,SAACK,GAAD,OAAUnB,EAAMgC,IAAIb,YAahD,CAACb,IAGF,8BACE,uBAAO2B,KAAK,eGxBH,SAASC,IACtB,OAAO,KCCM,SAASC,IACtB,MAA4B9B,qBAA5B,mBAAO+B,EAAP,KAAeX,EAAf,KAGA,OADAL,qBAAU,cAAU,CAACgB,IAEnB,qCACE,cAACZ,EAAD,CAAca,aAAcZ,IAC5B,cAACS,EAAD,CAASI,UAAWF,OCZ1B,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC/C,EAAD,UACE,cAAC,EAAD,QAGJgD,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.e32fa39e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useData } from \"./DataProvider\";\r\n\r\nlet mutations, genes;\r\nexport default function ControlPanel({ setMatrix }) {\r\n  const { allMutations } = useData();\r\n\r\n  const getGenes = () => {\r\n    genes = new Set();\r\n    Object.values(allMutations).forEach((group) =>\r\n      Object.keys(group).forEach((gene) => genes.add(gene))\r\n    );\r\n  };\r\n\r\n  const buildMatrix = () => {\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!allMutations) return;\r\n    mutations = { ...allMutations };\r\n    getGenes();\r\n    buildMatrix();\r\n  }, [allMutations]);\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"checkbox\" />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mutationsFiltered.dae01ed9.csv\";","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport mutationsFile from \"./data/mutationsFiltered.csv\";\r\nimport * as d3 from \"d3\";\r\n// import CSfile from './data/???'\r\n\r\nconst DataContext = createContext();\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default function DataProvider({ children }) {\r\n  const [allMutations, setAllMutations] = useState();\r\n\r\n  const getMutations = async () => {\r\n    const csv = await d3.csv(mutationsFile);\r\n    let prepared = {};\r\n    csv.forEach((elem) => {\r\n      if (!(elem.sample_id in prepared)) {\r\n        const gene = {};\r\n        gene[elem.symbol] = [elem];\r\n        prepared[elem.sample_id] = gene;\r\n      } else if (!(elem.symbol in prepared[elem.sample_id])) {\r\n        prepared[elem.sample_id][elem.symbol] = [elem];\r\n      } else {\r\n        prepared[elem.sample_id][elem.symbol].push(elem);\r\n      }\r\n    });\r\n    setAllMutations(prepared);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMutations();\r\n  }, []);\r\n\r\n  if (!allMutations) return <h2 className=\"loading\">Loading data ...</h2>;\r\n\r\n  return (\r\n    <DataContext.Provider value={{ allMutations }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default function Heatmap() {\r\n  return null;\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ControlPanel from \"./ControlPanel\";\nimport Heatmap from \"./Heatmap\";\n\nexport default function App() {\n  const [matrix, setMatrix] = useState();\n\n  useEffect(() => {}, [matrix]);\n  return (\n    <>\n      <ControlPanel setMutations={setMatrix} />\n      <Heatmap mutations={matrix} />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DataProvider from \"./DataProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}