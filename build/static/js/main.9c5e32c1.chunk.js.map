{"version":3,"sources":["DataProvider.js","Heatmap.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","require","MongoClient","createContext","DataProvider","children","useState","client","mini","mt","fl","getMiniObj","name","a","findOne","_id","res","getGroupedByPatient","getPatientByIndex","getIndexByPatient","getNumberOfPatients","getIndexByGene","getGeneByIndex","getNumberOfGenes","getMaxValue","getMatrix","findMany","getFlattened","useEffect","close","Provider","value","className","Heatmap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wiBAKMA,GAJkBC,EAAQ,KAAxBC,YAIYC,2BAGL,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,EAA4BC,qBAA5B,mBAAOC,EAAP,KACA,GADA,KACwBD,sBAAxB,mBAAOE,EAAP,KACA,GADA,KACoBF,sBAApB,mBAAOG,EAAP,KACA,GADA,KACoBH,sBAApB,mBAAOI,EAAP,KAkBMC,GAlBN,KAkBgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDL,EAAKM,QAAQ,CAAEC,IAAKH,IADnB,cACbI,EADa,yBAEVA,EAAIJ,IAFM,2CAAH,uDAKVK,EAAmB,uCAAG,sBAAAJ,EAAA,+EACnBF,EAAW,qBADQ,2CAAH,qDAInBO,EAAiB,uCAAG,sBAAAL,EAAA,+EACjBF,EAAW,mBADM,2CAAH,qDAIjBQ,EAAiB,uCAAG,sBAAAN,EAAA,+EACjBF,EAAW,mBADM,2CAAH,qDAIjBS,EAAmB,uCAAG,sBAAAP,EAAA,+EACnBF,EAAW,qBADQ,2CAAH,qDAInBU,EAAc,uCAAG,sBAAAR,EAAA,+EACdF,EAAW,gBADG,2CAAH,qDAIdW,EAAc,uCAAG,sBAAAT,EAAA,+EACdF,EAAW,gBADG,2CAAH,qDAIdY,EAAgB,uCAAG,sBAAAV,EAAA,+EAChBF,EAAW,kBADK,2CAAH,qDAIhBa,EAAW,uCAAG,sBAAAX,EAAA,+EACXF,EAAW,aADA,2CAAH,qDAIXc,EAAS,uCAAG,sBAAAZ,EAAA,+EACTJ,EAAGiB,SAAS,KADH,2CAAH,qDAITC,EAAY,uCAAG,sBAAAd,EAAA,+EACZH,EAAGgB,SAAS,KADA,2CAAH,qDASlB,OALAE,qBAAU,WACR,GAAKrB,EACL,OAAOA,EAAOsB,UACb,IAEEtB,GAAWC,GAASC,GAAOC,EAI9B,cAACV,EAAY8B,SAAb,CACEC,MAAO,CACLd,sBACAC,oBACAC,oBACAC,sBACAC,iBACAC,iBACAC,mBACAC,cACAC,YACAE,gBAXJ,SAcGtB,IAjBI,oBAAI2B,UAAU,UAAd,yBC7EI,SAASC,IACtB,OAAO,KCDM,SAASC,IACtB,OACE,mCACE,cAACD,EAAD,MCPN,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,UACE,cAAC,EAAD,QAGJ2C,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.9c5e32c1.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nconst { MongoClient } = require(\"mongodb\");\r\n\r\nconst suffix = \"Test\";\r\n\r\nconst DataContext = createContext();\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default function DataProvider({ children }) {\r\n  const [client, setClient] = useState();\r\n  const [mini, setMini] = useState();\r\n  const [mt, setMt] = useState();\r\n  const [fl, setFl] = useState();\r\n\r\n  const connect = async () => {\r\n    const uri = \"mongodb://localhost:27017\";\r\n    const client = new MongoClient(uri);\r\n    setClient(client);\r\n    try {\r\n      await client.connect();\r\n      const db = client.db(\"geneClusters\");\r\n      setMini(db.collection(`smallObjects${suffix}`));\r\n      setMt(db.collection(`matrix${suffix}`));\r\n      setFl(db.collection(`flattened${suffix}`));\r\n    } catch (e) {\r\n      console.log(e);\r\n      return <h2>No Mongodb connection</h2>;\r\n    }\r\n  };\r\n\r\n  const getMiniObj = async (name) => {\r\n    let res = await mini.findOne({ _id: name });\r\n    return res[name];\r\n  };\r\n\r\n  const getGroupedByPatient = async () => {\r\n    return getMiniObj(\"groupedByPatient\");\r\n  };\r\n\r\n  const getPatientByIndex = async () => {\r\n    return getMiniObj(\"patientByIndex\");\r\n  };\r\n\r\n  const getIndexByPatient = async () => {\r\n    return getMiniObj(\"indexByPatient\");\r\n  };\r\n\r\n  const getNumberOfPatients = async () => {\r\n    return getMiniObj(\"numberOfPatients\");\r\n  };\r\n\r\n  const getIndexByGene = async () => {\r\n    return getMiniObj(\"indexByGene\");\r\n  };\r\n\r\n  const getGeneByIndex = async () => {\r\n    return getMiniObj(\"geneByIndex\");\r\n  };\r\n\r\n  const getNumberOfGenes = async () => {\r\n    return getMiniObj(\"numberOfGenes\");\r\n  };\r\n\r\n  const getMaxValue = async () => {\r\n    return getMiniObj(\"maxValue\");\r\n  };\r\n\r\n  const getMatrix = async () => {\r\n    return mt.findMany({});\r\n  };\r\n\r\n  const getFlattened = async () => {\r\n    return fl.findMany({});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    return client.close();\r\n  }, []);\r\n\r\n  if (!client || !mini || !mt || !fl)\r\n    return <h2 className=\"loading\">Loading ...</h2>;\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        getGroupedByPatient,\r\n        getPatientByIndex,\r\n        getIndexByPatient,\r\n        getNumberOfPatients,\r\n        getIndexByGene,\r\n        getGeneByIndex,\r\n        getNumberOfGenes,\r\n        getMaxValue,\r\n        getMatrix,\r\n        getFlattened,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useData } from \"./DataProvider\";\r\n\r\nexport default function Heatmap() {\r\n  return null;\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Heatmap from \"./Heatmap\";\n\nexport default function App() {\n  return (\n    <>\n      <Heatmap />\n    </>\n  );\n\n  // add option to filter by clusters that contain genes from a list (e.g. CS list)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DataProvider from \"./DataProvider\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}